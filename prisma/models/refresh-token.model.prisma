model RefreshToken {
  id         String    @id @default(uuid()) @db.Uuid
  token      String    @unique @db.VarChar(500)
  userId     String    @map("user_id") @db.Uuid
  sessionId  String    @map("session_id") @db.Uuid
  deviceInfo String?   @map("device_info") @db.VarChar(255)
  ipAddress  String?   @map("ip_address") @db.VarChar(50)
  createdAt  DateTime  @default(now()) @map("created_at") @db.Timestamptz(6)
  updatedAt  DateTime? @updatedAt @map("updated_at") @db.Timestamptz(6)
  deletedAt  DateTime? @map("deleted_at") @db.Timestamptz(6)
  createdBy  String?   @map("created_by") @db.Uuid
  updatedBy  String?   @map("updated_by") @db.Uuid
  deletedBy  String?   @map("deleted_by") @db.Uuid
  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("refresh_tokens")
}
