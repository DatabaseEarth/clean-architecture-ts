// Token type enum
enum TokenType {
  REFRESH
  ACCESS
  RESET_PASSWORD
  EMAIL_VERIFICATION
}

// User status enum
enum UserStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
  DELETED
}

// Refresh Token model
model RefreshToken {
  id         String    @id @default(uuid()) @db.Uuid
  userId     String    @map("user_id") @db.Uuid
  token      String    @db.VarChar(500)
  sessionId  String    @map("session_id") @db.Uuid
  deviceInfo String?   @map("device_info") @db.VarChar(255)
  ipAddress  String?   @map("ip_address") @db.VarChar(50)
  createdAt  DateTime  @default(now()) @map("created_at") @db.Timestamptz
  updatedAt  DateTime  @updatedAt @map("updated_at") @db.Timestamptz
  deletedAt  DateTime? @map("deleted_at") @db.Timestamptz
  createdBy  String?   @map("created_by") @db.Uuid
  updatedBy  String?   @map("updated_by") @db.Uuid
  deletedBy  String?   @map("deleted_by") @db.Uuid
  version    Int       @default(1)

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("refresh_tokens")
}

// User model
model User {
  id        String    @id @default(uuid()) @db.Uuid
  email     String    @unique @db.VarChar(100)
  phone     String    @unique @db.VarChar(20)
  password  String    @db.VarChar(500)
  fullName  String    @map("full_name") @db.VarChar(255)
  createdAt DateTime  @default(now()) @map("created_at") @db.Timestamptz
  updatedAt DateTime  @updatedAt @map("updated_at") @db.Timestamptz
  deletedAt DateTime? @map("deleted_at") @db.Timestamptz
  createdBy String?   @map("created_by") @db.Uuid
  updatedBy String?   @map("updated_by") @db.Uuid
  deletedBy String?   @map("deleted_by") @db.Uuid
  version   Int       @default(1)

  // Relations
  refreshTokens RefreshToken[]

  @@map("users")
}

// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider     = "prisma-client-js"
  output       = "../src/infrastructure/database/prisma/generated"
  moduleFormat = "esm"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  //   directUrl = env("DIRECT_URL")
}
